{"version":3,"sources":["views/charts/ChartLineSimple.js","views/widgets/WidgetsBrand.js"],"names":["ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","Object","assign","maintainAspectRatio","legend","computedDatasets","deepObjectsMerge","datasets","computedOptions","labels","defaultProps","WidgetsBrand","withCharts","sm","lg","href","target","name","height","className","to","rightHeader","rightFooter","leftHeader","leftFooter"],"mappings":"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","file":"static/js/16.7acbf35b.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\nimport { CChartLine } from '@coreui/react-chartjs'\n\nconst ChartLineSimple = props => {\n\n  const {\n    borderColor,\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const pointHoverColor = (()=>{\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor\n    }\n    return borderColor\n  })()\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        borderColor: getColor(borderColor),\n        backgroundColor: getColor(backgroundColor),\n        pointBackgroundColor: getColor(pointHoverColor),\n        pointHoverBackgroundColor: getColor(pointHoverColor),\n        label\n      }\n    ]\n  })()\n\n  const pointedOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [\n          {\n            offset: true,\n            gridLines: {\n              color: 'transparent',\n              zeroLineColor: 'transparent'\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: 'transparent'\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, dataPoints) - 5,\n              max: Math.max.apply(Math, dataPoints) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 1\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const straightOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 2\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const defaultOptions = (()=>{\n    const options = pointed ? pointedOptions : straightOptions\n      return Object.assign({}, options, {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        }\n      })\n  })()\n\n  const computedDatasets = (() => {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\n  })()\n\n  const computedOptions = (() => {\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\n  })()\n\n  // render\n\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={computedDatasets}\n      options={computedOptions}\n      labels={label}\n    />\n  )\n}\n\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartLineSimple\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CWidgetBrand, CRow, CCol, CLink } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport ChartLineSimple from '../charts/ChartLineSimple';\n\nconst WidgetsBrand = ({withCharts})=>{\n\n  // render\n\n  return withCharts ?\n  <CRow>\n    <CCol sm=\"6\" lg=\"3\">\n    <a href=\"https://www.facebook.com/\" target=\"_blank\">\n      <CWidgetBrand\n        color=\"facebook\"\n        // rightHeader=\"89k\"\n        // rightFooter=\"friends\"\n        // leftHeader=\"459\"\n        // leftFooter=\"feeds\"\n      >\n        \n        <CIcon\n          name=\"cib-facebook\"\n          height=\"52\"\n          className=\"my-4\"\n        />\n        \n        \n      </CWidgetBrand>\n      </a>\n    </CCol>\n\n    <CCol sm=\"6\" lg=\"3\">\n    <a href=\"https://www.instagram.com/\" target=\"_blank\">\n      <CWidgetBrand\n        color=\"instagram\"\n        // rightHeader=\"973k\"\n        // rightFooter=\"followers\"\n        // leftHeader=\"1.792\"\n        // leftFooter=\"tweets\"\n      >\n        <CIcon\n          name=\"cib-instagram\"\n          height=\"52\"\n          className=\"my-4\"\n        />\n      </CWidgetBrand>\n      </a>\n    </CCol>\n\n    <CCol sm=\"6\" lg=\"3\">\n    <a href=\"https://www.linkedIn.com/\" target=\"_blank\">\n      <CWidgetBrand\n        color=\"linkedin\"\n        // rightHeader=\"500+\"\n        // rightFooter=\"contracts\"\n        // leftHeader=\"292\"\n        // leftFooter=\"feeds\"\n      >\n        <CIcon\n          name=\"cib-linkedin\"\n          height=\"52\"\n          className=\"my-4\"\n        />\n        \n      </CWidgetBrand>\n      </a>\n    </CCol> \n\n    <CCol sm=\"6\" lg=\"3\">\n      <CWidgetBrand\n        // rightHeader=\"12\"\n        // rightFooter=\"events\"\n        // leftHeader=\"4\"\n        // leftFooter=\"meetings\"\n        color=\"gradient-warning\"\n      >\n        <CIcon\n          name=\"cil-calendar\"\n          height=\"52\"\n          className=\"my-4\"\n          to=\"/calender\"\n        />\n\n      </CWidgetBrand>\n    </CCol>\n  </CRow> :\n  \n  <CRow>\n    <CCol sm=\"6\" lg=\"3\">\n      <CWidgetBrand\n        color=\"facebook\"\n        rightHeader=\"89k\"\n        rightFooter=\"friends\"\n        leftHeader=\"459\"\n        leftFooter=\"feeds\"\n      >\n        <CIcon\n          name=\"cib-facebook\"\n          height=\"56\"\n          className=\"my-4\"\n        />\n      </CWidgetBrand>\n    </CCol>\n\n    <CCol sm=\"6\" lg=\"3\">\n      <CWidgetBrand\n        color=\"twitter\"\n        rightHeader=\"973k\"\n        rightFooter=\"followers\"\n        leftHeader=\"1.792\"\n        leftFooter=\"tweets\"\n      >\n        <CIcon\n          name=\"cib-twitter\"\n          height=\"56\"\n          className=\"my-4\"\n        />\n      </CWidgetBrand>\n    </CCol>\n\n    <CCol sm=\"6\" lg=\"3\">\n      <CWidgetBrand\n        color=\"linkedin\"\n        rightHeader=\"500+\"\n        rightFooter=\"contracts\"\n        leftHeader=\"292\"\n        leftFooter=\"feeds\"\n      >\n        <CIcon\n          name=\"cib-linkedin\"\n          height=\"56\"\n          className=\"my-4\"\n        />\n      </CWidgetBrand>\n    </CCol>\n\n    <CCol sm=\"6\" lg=\"3\">\n      <CWidgetBrand\n        rightHeader=\"12\"\n        rightFooter=\"events\"\n        leftHeader=\"4\"\n        leftFooter=\"meetings\"\n        color=\"gradient-warning\"\n      >\n        <CIcon\n          name=\"cil-calendar\"\n          height=\"56\"\n          className=\"my-4\"\n        />\n      </CWidgetBrand>\n    </CCol>\n  </CRow>\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool\n}\n\nexport default WidgetsBrand\n"],"sourceRoot":""}